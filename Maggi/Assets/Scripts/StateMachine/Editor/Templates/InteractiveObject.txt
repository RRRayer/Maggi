using Pudding.StateMachine.ScriptableObjects;

public class #SCRIPTNAME# : InteractiveObject
{
    public override void OnIdleStateEnter()
    {
        base.OnIdleStateEnter();
    }

    public override void OnIdleUpdate()
    {
        base.OnIdleUpdate();
    }

    public override void OnIdleStateExit()
    {
        base.OnIdleStateExit();
    }

    public override void OnWalkStateEnter()
    {
        base.OnWalkStateEnter();
    }

    public override void OnWalkUpdate()
    {
        base.OnWalkUpdate();
    }

    public override void OnWalkStateExit()
    {
        base.OnWalkStateExit();
    }

    public override void OnJumpAscendingStateEnter()
    {
        base.OnJumpAscendingStateEnter();
    }

    public override void OnJumpAscendingUpdate()
    {
        base.OnJumpAscendingUpdate();
    }

    public override void OnJumpAscendingStateExit()
    {
        base.OnJumpAscendingStateExit();
    }

    public override void OnJumpDescendingStateEnter()
    {
        base.OnJumpDescendingStateEnter();
    }

    public override void OnJumpDescendingUpdate()
    {
        base.OnJumpDescendingUpdate();
    }

    public override void OnJumpDescendingStateExit()
    {
        base.OnJumpDescendingStateExit();
    }

    public override void OnPullStateEnter()
    {
        base.OnPullStateEnter();
    }

    public override void OnPullUpdate()
    {
        base.OnPullUpdate();
    }

    public override void OnPullStateExit()
    {
        base.OnPullStateExit();
    }

    public override void OnPushStateEnter()
    {
        base.OnPushStateEnter();
    }

    public override void OnPushUpdate()
    {
        base.OnPushUpdate();
    }

    public override void OnPushStateExit()
    {
        base.OnPushStateExit();
    }
}
